class Solution {
    int n;
    public List<List<Integer>> permute(int[] nums) {
        n = nums.length;
        List<Integer> path = new ArrayList<>();
        List<List<Integer>> paths = new ArrayList<>();         
        dfs(nums, path, paths);
        return paths;
    }

    public void dfs(int[] nums, List<Integer> path, List<List<Integer>> paths){
        if(path.size() == n) {
            paths.add(new ArrayList(path));
            return;
        }
        for(int num:nums){
            if(!path.contains(num)){
                path.add(num);
                dfs(nums, path, paths);
                path.remove(path.size()-1);
            }
        }
    }
}
